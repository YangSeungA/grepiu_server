buildscript {
	ext {
        springBootVersion = '2.0.0.RELEASE'
    }
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

// Junit 테스트는 빌드시 제외
test {
	exclude 'com/iuom/springboot/test/**'
}
sourceSets {
	main {
		java {
			srcDir "src/main/java"
		}

		resources {
			srcDir "src/main/resources"
		}
	}
	test {
		java {
			srcDir "src/test/java"
		}
	}
	generated {
		java {
			srcDirs = ['src/main/generated']
		}
	}
}
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

// 환경 파일 Set
if (project.hasProperty('profile')) {
	sourceSets.main.resources.srcDirs += "src/main/resources-${project.getProperty('profile')}"
} else {
	sourceSets.main.resources.srcDirs += "src/main/resources-local"
}

// local 개발 환경 시작
if(ext.profile == 'local') {
	// mongodb
	println '로컬 환경을 테스트 check 합니다.'
	println 'MongoDb 확인....'

	task preBuild  {
		def classesDir = new File('/data/db');
		doFirst {
			println 'DB 경로 : ' + classesDir.isDirectory();
			if (classesDir.isDirectory()) {
				println 'Mongo DB 디레토리 확인됨.'
			} else {
				println '경로가 없어 생성합니다.'
				classesDir.mkdirs()
			}
			println 'MongoDb 확인 완료'
		}
	}
	task executeJob {
		println "Custom Job 등록"
	}
	compileJava.dependsOn(preBuild,executeJob)
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.0.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.0.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.0.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker', version: '2.0.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-batch', version: '2.0.0.RELEASE'
	// spring autoconfigure 1.x 호환성으로 필요
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE'
//	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.0.0.RELEASE'
	compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.1'
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.9.RELEASE'

	compile('mysql:mysql-connector-java:5.1.38')
	compile('org.apache.commons:commons-collections4:4.1')
	compile group: 'com.google.guava', name: 'guava', version: '23.6-jre'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
	compile 'org.projectlombok:lombok:1.16.18'

	// https://mvnrepository.com/artifact/org.jsoup/jsoup 크롤링
	compile group: 'org.jsoup', name: 'jsoup', version: '1.11.2'

	// websocket
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '2.0.0.RELEASE'
	compile group: 'org.webjars', name: 'webjars-locator', version: '0.32'
	compile group: 'org.webjars', name: 'sockjs-client', version: '1.1.2'
	compile("org.webjars:stomp-websocket:2.3.3-1")
	compile("org.webjars:bootstrap:3.3.7")
	compile("org.webjars:jquery:3.3.1")

	//  동적 사이트 크롤링을 위해 추가
	compile group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: '3.12.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.12.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.12.0'

	// GSON
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

	// 인증 JWT
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.9.RELEASE'

	// 파이어베이스
//	compile 'com.google.firebase:firebase-admin:5.8.0'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}


